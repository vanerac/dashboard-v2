{
  "openapi": "3.0.3",
  "info": {
    "title": "Title",
    "description": "Title",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "login",
        "tags": [
          "authentication"
        ],
        "summary": "Get a token",
        "description": "Login and retrieve a token",
        "security": [],
        "requestBody": {
          "description": "Login and password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "register",
        "tags": [
          "authentication"
        ],
        "summary": "Register a new user",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "description": "Register a new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "displayName"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/google/login": {
      "get": {
        "operationId": "googleConsentSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Redirects to SSO Auth screen",
        "description": "Redirects to SSO Auth screen",
        "parameters": [
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ssoUrl"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/google/callback": {
      "get": {
        "operationId": "googleAuthCodeSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Assign token tu user and/or login to user account",
        "description": "Assign token tu user and/or login to user account",
        "security": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code returned by provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/spotify/login": {
      "get": {
        "operationId": "spotifyConsentSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Redirects to SSO Auth screen",
        "description": "Redirects to SSO Auth screen",
        "parameters": [
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ssoUrl"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/spotify/callback": {
      "get": {
        "operationId": "spotifyAuthCodeSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Assign token tu user and/or login to user account",
        "description": "Assign token tu user and/or login to user account",
        "security": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code returned by provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/deezer/login": {
      "get": {
        "operationId": "deezerConsentSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Redirects to SSO Auth screen",
        "description": "Redirects to SSO Auth screen",
        "parameters": [
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ssoUrl"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/deezer/callback": {
      "get": {
        "operationId": "deezerAuthCodeSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Assign token tu user and/or login to user account",
        "description": "Assign token tu user and/or login to user account",
        "security": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code returned by provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/lastfm/login": {
      "get": {
        "operationId": "lastfmConsentSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Redirects to SSO Auth screen",
        "description": "Redirects to SSO Auth screen",
        "parameters": [
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ssoUrl"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/lastfm/callback": {
      "get": {
        "operationId": "lastfmAuthCodeSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Assign token tu user and/or login to user account",
        "description": "Assign token tu user and/or login to user account",
        "security": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code returned by provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/apple/login": {
      "get": {
        "operationId": "appleConsentSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Redirects to SSO Auth screen",
        "description": "Redirects to SSO Auth screen",
        "parameters": [
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ssoUrl"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/apple/callback": {
      "get": {
        "operationId": "appleAuthCodeSSO",
        "tags": [
          "SSO"
        ],
        "summary": "Assign token tu user and/or login to user account",
        "description": "Assign token tu user and/or login to user account",
        "security": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code returned by provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "A callback URL to redirect to after SSO authentication",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/service": {
      "get": {
        "operationId": "getAllUserServices",
        "tags": [
          "services"
        ],
        "summary": "Get all user services",
        "description": "Retrieves a list of all the user's connected services",
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/service/{serviceId}": {
      "get": {
        "operationId": "getServicesById",
        "tags": [
          "services"
        ],
        "summary": "Get user services",
        "description": "Retrieves a list of the user's connected services",
        "security": [],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/service/{serviceId}/delete": {
      "delete": {
        "operationId": "deleteService",
        "tags": [
          "services"
        ],
        "summary": "Delete user service",
        "description": "Deletes a user service",
        "security": [],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/service/{serviceId}/update": {
      "put": {
        "operationId": "updateService",
        "tags": [
          "services"
        ],
        "summary": "Update user service",
        "description": "Updates a user service",
        "security": [],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/": {
      "get": {
        "tags": [
          "playlist"
        ],
        "summary": "Get all playlists",
        "description": "Get all playlists",
        "operationId": "getAllPlaylists",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/{playlistId}": {
      "get": {
        "tags": [
          "playlist"
        ],
        "summary": "Get playlist by id",
        "description": "Get playlist by id",
        "operationId": "getPlaylistById",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistSingleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/{playlistId}/tracks": {
      "get": {
        "tags": [
          "playlist"
        ],
        "summary": "Get playlist tracks",
        "description": "Get playlist tracks",
        "operationId": "getPlaylistTracks",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistTracksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/create": {
      "post": {
        "tags": [
          "playlist"
        ],
        "summary": "Create playlist",
        "description": "Create playlist",
        "operationId": "create",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/playlistCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistSingleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/{playlistId}/update": {
      "put": {
        "tags": [
          "playlist"
        ],
        "summary": "Update playlist",
        "description": "Update playlist",
        "operationId": "update",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/playlistUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistSingleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/{playlistId}/delete": {
      "delete": {
        "tags": [
          "playlist"
        ],
        "summary": "Delete playlist",
        "description": "Delete playlist",
        "operationId": "delete",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistSingleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/{playlistId}/save": {
      "get": {
        "tags": [
          "playlist"
        ],
        "summary": "Save playlist",
        "description": "Save playlist",
        "operationId": "save",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistSingleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/playlist/{playlistId}/unsave": {
      "get": {
        "tags": [
          "playlist"
        ],
        "summary": "Unsave playlist",
        "description": "Unsave playlist",
        "operationId": "unsave",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlistSingleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search",
        "description": "Search",
        "operationId": "searchGet",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/{artistId}": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Get artist by ID",
        "description": "Get artist by ID",
        "operationId": "getArtistById",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "ID of artist to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSingleArtist"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/{artistId}/albums": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Get artist albums",
        "description": "Get artist albums",
        "operationId": "getArtistAlbums",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "ID of artist to return albums for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of albums to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of albums to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist albums found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getArtistAlbumsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/{artistId}/top-tracks": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Get artist top tracks",
        "description": "Get artist top tracks",
        "operationId": "getArtistTopTracks",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "ID of artist to return top tracks for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country to return top tracks for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of top tracks to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of top tracks to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist top tracks found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getArtistTopTracksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/{artistId}/related": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Get artist related artists",
        "description": "Get artist related artists",
        "operationId": "getArtistRelatedArtists",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "ID of artist to return related artists for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of related artists to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of related artists to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist related artists found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getArtistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/{artistId}/follow": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Follow artist",
        "description": "Follow artist",
        "operationId": "followArtist",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "ID of artist to follow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist followed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSingleArtist"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/{artistId}/unfollow": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Unfollow artist",
        "description": "Unfollow artist",
        "operationId": "unfollowArtist",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "ID of artist to unfollow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist unfollowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSingleArtist"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/artist/followed": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Get followed artists",
        "description": "Get followed artists",
        "operationId": "getFollowedArtists",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of artists to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of artists to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Followed artists found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getArtistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}": {
      "get": {
        "tags": [
          "Track"
        ],
        "summary": "Get track by ID",
        "description": "Get track by ID",
        "operationId": "getTrackById",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Track ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}/like": {
      "post": {
        "tags": [
          "Track"
        ],
        "summary": "Like track",
        "description": "Like track",
        "operationId": "likeTrack",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Track ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}/unlike": {
      "post": {
        "tags": [
          "Track"
        ],
        "summary": "Unlike track",
        "description": "Unlike track",
        "operationId": "unlikeTrack",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Track ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}/album": {
      "get": {
        "tags": [
          "Track"
        ],
        "summary": "Get track album",
        "description": "Get track album",
        "operationId": "getTrackAlbum",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Track ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackAlbumResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}/artists": {
      "get": {
        "tags": [
          "Track"
        ],
        "summary": "Get track artist",
        "description": "Get track artist",
        "operationId": "getTrackArtist",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Track ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackArtistResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}/addToPlaylist/{playlistId}": {
      "post": {
        "tags": [
          "Playlist"
        ],
        "summary": "Add track to playlist",
        "description": "Add track to playlist",
        "operationId": "addToPlaylist",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Playlist ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/data/{serviceId}/track/{trackId}/removeFromPlaylist/{playlistId}": {
      "post": {
        "tags": [
          "Playlist"
        ],
        "summary": "Remove track from playlist",
        "description": "Remove track from playlist",
        "operationId": "removeFromPlaylist",
        "parameters": [
          {
            "name": "trackId",
            "in": "path",
            "description": "Track ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service to return playlists for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "playlistId",
            "in": "path",
            "description": "Playlist ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/currentState": {
      "get": {
        "tags": [
          "playback"
        ],
        "summary": "Get current playback state",
        "description": "Get current playback state",
        "operationId": "getCurrentState",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybackStateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/queue": {
      "get": {
        "tags": [
          "playback"
        ],
        "summary": "Get queue",
        "description": "Get queue",
        "operationId": "getQueue",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQueueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/queue/add": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Add to queue",
        "description": "Add to queue",
        "operationId": "addToQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToQueueRequest"
              }
            }
          },
          "description": "",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToQueueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/queue/delete": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Remove from queue",
        "description": "Remove from queue",
        "operationId": "removeFromQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromQueueRequest"
              }
            }
          },
          "description": "",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromQueueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/queue/clear": {
      "delete": {
        "tags": [
          "playback"
        ],
        "summary": "Clear queue",
        "description": "Clear queue",
        "operationId": "clearQueue",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearQueueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/queue/move": {
      "put": {
        "tags": [
          "playback"
        ],
        "summary": "Move in queue",
        "description": "Move in queue",
        "operationId": "moveInQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveInQueueRequest"
              }
            }
          },
          "description": "",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveInQueueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/play": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Play track",
        "description": "Play track",
        "operationId": "playTrack",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayTrackRequest"
              }
            }
          },
          "description": "",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayTrackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/pause": {
      "get": {
        "tags": [
          "playback"
        ],
        "summary": "Pause",
        "description": "Pause",
        "operationId": "pause",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PauseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/resume": {
      "get": {
        "tags": [
          "playback"
        ],
        "summary": "Resume",
        "description": "Resume",
        "operationId": "resume",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/skip": {
      "get": {
        "tags": [
          "playback"
        ],
        "summary": "Skip",
        "description": "Skip",
        "operationId": "skip",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/prev": {
      "get": {
        "tags": [
          "playback"
        ],
        "summary": "Previous",
        "description": "Previous",
        "operationId": "prev",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrevResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/seek": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Seek",
        "description": "Seek",
        "operationId": "seek",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeekResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/volume": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Set volume",
        "description": "Set volume",
        "operationId": "setVolume",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetVolumeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/shuffle": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Set shuffle",
        "description": "Set shuffle",
        "operationId": "setShuffle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetShuffleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/repeat": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Set repeat",
        "description": "Set repeat",
        "operationId": "setRepeat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetRepeatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/quality": {
      "post": {
        "tags": [
          "playback"
        ],
        "summary": "Set quality",
        "description": "Set quality",
        "operationId": "setQuality",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetQualityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get all devices",
        "description": "Get all devices",
        "operationId": "getAllDevices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllDevicesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/device/current": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get current device",
        "description": "Get current device",
        "operationId": "getCurrentDevice",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/device/change": {
      "put": {
        "tags": [
          "devices"
        ],
        "summary": "Set current device",
        "description": "Set current device",
        "operationId": "setCurrentDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCurrentDeviceRequest"
              }
            }
          },
          "description": "",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetCurrentDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playback/device/register": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Register device",
        "description": "Register device",
        "operationId": "registerDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDeviceRequest"
              }
            }
          },
          "description": "",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/me/top/artists": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get my top artists",
        "description": "Get my top artists",
        "operationId": "getMyTopArtists",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/me/top/tracks": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get my top tracks",
        "description": "Get my top tracks",
        "operationId": "getMyTopTracks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/me/top/albums": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get my top albums",
        "description": "Get my top albums",
        "operationId": "getMyTopAlbums",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/me/top/tags": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get my top tags",
        "description": "Get my top tags",
        "operationId": "getMyTopTags",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/charts/top/artists/weekly": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get global top artists",
        "description": "Get global top artists",
        "operationId": "getGlobalTopArtists",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/charts/top/tracks/weekly": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get global top tracks",
        "description": "Get global top tracks",
        "operationId": "getGlobalTopTracks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/charts/top/albums/weekly": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get global top albums",
        "description": "Get global top albums",
        "operationId": "getGlobalTopAlbums",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Track": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "playable": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "artist",
          "album",
          "duration",
          "image",
          "provider",
          "playable"
        ]
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        },
        "required": [
          "id",
          "name",
          "provider"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "google",
              "spotify",
              "apple",
              "deezer",
              "lastfm"
            ]
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "type",
          "enabled"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "displayName",
          "id"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Artist": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "followers": {
            "type": "integer"
          },
          "external_urls": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "image",
          "provider",
          "followers",
          "external_urls"
        ]
      },
      "Album": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          }
        }
      },
      "SearchResult": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Track"
            },
            {
              "$ref": "#/components/schemas/Album"
            },
            {
              "$ref": "#/components/schemas/Artist"
            },
            {
              "$ref": "#/components/schemas/Playlist"
            }
          ]
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "volume": {
            "type": "integer"
          },
          "state": {
            "type": "boolean"
          },
          "ws": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "volume",
          "state",
          "ws"
        ]
      },
      "Tag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "getSingleArtist": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "followers": {
            "type": "integer"
          },
          "external_urls": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "image",
          "provider",
          "followers",
          "external_urls"
        ]
      },
      "PlaybackStatus": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          },
          "position": {
            "type": "integer"
          },
          "device": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "playing",
              "paused",
              "stopped"
            ]
          }
        },
        "required": [
          "track",
          "position",
          "device",
          "state"
        ]
      },
      "loginResponse": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "getArtistsResponse": {
        "type": "object",
        "properties": {
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artist"
            }
          }
        }
      },
      "getArtistAlbumsResponse": {
        "type": "object",
        "properties": {
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Album"
            }
          }
        }
      },
      "getArtistPlaylistsResponse": {
        "type": "object",
        "properties": {
          "playlists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Playlist"
            }
          }
        }
      },
      "getArtistTopTracksResponse": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        }
      },
      "ServiceResponse": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          }
        }
      },
      "PlaylistResponse": {
        "$ref": "#/components/schemas/ServiceResponse"
      },
      "playlistsResponse": {
        "type": "object",
        "properties": {
          "playlists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Playlist"
            }
          }
        }
      },
      "playlistSingleResponse": {
        "type": "object",
        "properties": {
          "playlist": {
            "$ref": "#/components/schemas/Playlist"
          }
        }
      },
      "playlistTracksResponse": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        }
      },
      "PlaybackStateResponse": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "playing",
              "paused",
              "stopped"
            ]
          },
          "position": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          },
          "volume": {
            "type": "number"
          },
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "AddToQueueResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "GetQueueResponse": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        }
      },
      "MoveInQueueResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "ClearQueueResponse": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        }
      },
      "GetAllDevicesResponse": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          }
        }
      },
      "GetCurrentDeviceResponse": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "PlayTrackResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "ResumeResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "PauseResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "SkipResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "PrevResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "SeekResponse": {
        "type": "object",
        "properties": {
          "position": {
            "type": "number"
          }
        }
      },
      "SetVolumeResponse": {
        "type": "object",
        "properties": {
          "volume": {
            "type": "number"
          }
        }
      },
      "SetShuffleResponse": {
        "type": "object",
        "properties": {
          "shuffle": {
            "type": "boolean"
          }
        }
      },
      "SetRepeatResponse": {
        "type": "object",
        "properties": {
          "repeat": {
            "type": "boolean"
          }
        }
      },
      "SetQualityResponse": {
        "type": "object",
        "properties": {
          "quality": {
            "type": "string"
          }
        }
      },
      "searchQueryResponse": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/SearchResult"
          }
        },
        "required": [
          "results"
        ]
      },
      "RemoveFromQueueResponse": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "SetCurrentDeviceResponse": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "RegisterDeviceResponse": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "loginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ssoUrl": {
        "type": "object",
        "required": [
          "url",
          "base_url",
          "client_id",
          "redirect_uri"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "base_url": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          },
          "response_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "playlistCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "playlistUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "AddToQueueRequest": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "RemoveFromQueueRequest": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "MoveInQueueRequest": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          },
          "position": {
            "type": "number"
          }
        }
      },
      "SetCurrentDeviceRequest": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "RegisterDeviceRequest": {
        "type": "object",
        "properties": {
          "ws": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PlayTrackRequest": {
        "type": "object",
        "properties": {
          "track": {
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "ArtistStats": {
        "type": "object",
        "properties": {
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artist"
            }
          }
        }
      },
      "AlbumStats": {
        "type": "object",
        "properties": {
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Album"
            }
          }
        }
      },
      "TrackStats": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        }
      },
      "TagStats": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "getTrackResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "playable": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "artist",
          "album",
          "duration",
          "image",
          "provider",
          "playable"
        ]
      },
      "getTrackAlbumResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          }
        }
      },
      "getTrackArtistResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "artist",
              "album",
              "track",
              "playlist"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "followers": {
            "type": "integer"
          },
          "external_urls": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "image",
          "provider",
          "followers",
          "external_urls"
        ]
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
